apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: postgres-main
    env: {{ .Values.env }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
  name: postgres-main
spec:
  serviceName: "postgres-main"
  replicas: 1
  selector:
    matchLabels:
      app: postgres-main
  template:
    metadata:
      labels:
        app: postgres-main
    spec:
      containers:
      - name: postgres-main
        image: postgres:{{ .Chart.AppVersion }}
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-main-db-pass
              key: pass
        envFrom:
          - configMapRef:
              name: postgres-main-config
        ports:
        - containerPort: {{ .Values.postgres_main.ss.containerPort }}
          name: postgres-main
        volumeMounts:
        - name: postgres-main
          mountPath: {{ .Values.postgres_main.ss.dataVolumeMountPath }}
          subPath: postgres-main
      initContainers:
      - name: init-postgres-main
        image: busybox:1.28
        command: ['sh', '-c', ' cp /var/lib/postgresql/data/postgresql.main.conf /var/lib/postgresql/data/postgresql.conf && cp /var/lib/postgresql/data/pg_hba.main.conf /var/lib/postgresql/data/pg_hba.conf && chmod 600 /var/lib/postgresql/data/postgresql.conf && chmod 600 /var/lib/postgresql/data/pg_hba.conf']
        volumeMounts:
        - name: postgres-main
          mountPath: {{ .Values.postgres_main.ss.dataVolumeMountPath }}
          subPath: postgres-main
        - name: postgres-main-conf-mnt
          mountPath: /var/lib/postgresql/data/postgresql.main.conf
          subPath: postgresql.conf
        - name: postgres-main-hba-mnt
          mountPath: /var/lib/postgresql/data/pg_hba.main.conf
          subPath: pg_hba.conf
      volumes:
      - name: postgres-main-conf-mnt
        secret:
          secretName: postgres-main-conf
      - name: postgres-main-hba-mnt
        secret:
          secretName: postgres-main-hba
  volumeClaimTemplates:
  - metadata:
      name: postgres-main
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.postgres_main.ss.storageClass }}
      resources:
        requests:
          storage: {{ .Values.postgres_main.ss.resources.req.storage }}