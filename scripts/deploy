#!/bin/bash

usage() {
  echo "Usage: $0 -c <chart_name> -e [dev|staging] " 1>&2 
}

[[ -z "$TD_PROJECT_ROOT" ]] && echo "TD_PROJECT_ROOT not set, exiting.." && exit 1

CHARTS_DIR="${TD_PROJECT_ROOT}/helm_charts"
CONFIG_DIR="${TD_PROJECT_ROOT}/config"

while getopts "c:e:" opts; do
  case "${opts}" in
    c)
      CHART=${OPTARG}
      ;;
    e)
      DEPLOY_ENV=${OPTARG}
      ;;
    *)
      usage && exit 1
      ;;
  esac
done

[[ -z "$CHART" ]] && "chart name must be provided, exiting..." && usage && exit 1
[[ -z "$DEPLOY_ENV" ]] && "env must be provided, exiting..." && usage && exit 1

if [[ "$DEPLOY_ENV" != "staging" ]] && [[ "$DEPLOY_ENV" != "dev" ]]; then
  echo "DEPLOY_ENV must be one of (staging|dev), you provided: $DEPLOY_ENV" && usage && exit 1
fi

# Fill the template and run the files through a diff
helm template "${CHARTS_DIR}/${CHART}" -f "${CONFIG_DIR}/${DEPLOY_ENV}/values.yaml" | kubectl diff --context "${DEPLOY_ENV}" -f -

read -p 'Proceed with kubectl apply? (N/y)' apply_confirm

if [[ "$apply_confirm" == 'y' ]] || [[ "$apply_confirm" == 'Y' ]]; then
  helm template "${CHARTS_DIR}/${CHART}" -f "${CONFIG_DIR}/${DEPLOY_ENV}/values.yaml" | kubectl apply --context "${DEPLOY_ENV}" -f -
else
  echo "Deploy cancelled..." && exit 0
fi

